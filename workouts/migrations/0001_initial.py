# Generated by Django 4.0.6 on 2023-06-09 17:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import workouts.models.post
import workouts.models.user_info
import workouts.models.workout
import workouts.models.workout_day
import workouts.models.workout_day_exercise


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Dati numele dizabilitatii', max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Dati numele exercitiului', max_length=20)),
                ('description', models.TextField()),
                ('muscle_group', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_name', models.CharField(help_text='Dati numele scopului antrenamentului', max_length=20)),
            ],
            options={
                'ordering': ['goal_name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titlul postarii', max_length=20)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=workouts.models.post.image_path)),
                ('text', models.TextField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('post_type', models.CharField(choices=[('Schimbare in greutate', 'Schimbare in greutate'), ('Alt tip de postare', 'Alt tip de postare')], default='Alt tip de postare', max_length=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Denumiti antrenamentul', max_length=20)),
                ('equipment', models.CharField(choices=[('Nu, antrenament acasa', 'Nu, antrenament acasa'), ('Da, antrenament la sala', 'Da, antrenament la sala')], default='Nu, antrenament acasa', max_length=25)),
                ('level', models.CharField(choices=[('Incepator', 'Incepator'), ('Mediu', 'Mediu'), ('Avansat', 'Avansat')], default='Incepator', max_length=20)),
                ('length', models.IntegerField(help_text='Numarul de zile', validators=[workouts.models.workout.validate_length])),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to=workouts.models.workout.image_path)),
                ('disability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workouts.disability')),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workouts.goal')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(help_text='Numarul zilei', validators=[workouts.models.workout_day.validate_day])),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workouts.workout')),
            ],
            options={
                'ordering': ['day'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutDayExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification', models.CharField(choices=[('Timp', 'Timp'), ('Seturi si Repetitii', 'Seturi si Repetitii')], default='Seturi si Repetitii', max_length=20)),
                ('time', models.IntegerField(default=0, validators=[workouts.models.workout_day_exercise.validate])),
                ('sets', models.IntegerField(default=0, validators=[workouts.models.workout_day_exercise.validate])),
                ('repetitions', models.IntegerField(default=0, validators=[workouts.models.workout_day_exercise.validate])),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workouts.exercise')),
                ('workout_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workouts.workoutday')),
            ],
            options={
                'ordering': ['workout_day'],
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=workouts.models.user_info.image_path)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('current_weight', models.FloatField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='workouts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['post'],
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('workout_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workouts.workoutday')),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=20)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_1', to=settings.AUTH_USER_MODEL)),
                ('user_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user_1'],
            },
        ),
        migrations.CreateModel(
            name='FoodCalories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('meal_type', models.CharField(choices=[('Mic Dejun', 'Mic Dejun'), ('Gustare', 'Gustare'), ('Pranz', 'Pranz'), ('Cina', 'Cina')], max_length=20)),
                ('food', models.CharField(max_length=100)),
                ('calories', models.PositiveIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='workouts.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='workouts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
